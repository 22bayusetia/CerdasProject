# -*- coding: utf-8 -*-
"""deploy_streamlit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JdjCT3TCYS7zcPOYbw0kyLj5QxMUy1U3
"""

import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image

# Load the pre-trained model
@st.cache(allow_output_mutation=True)
def load_model():
    model = tf.keras.models.load_model('downloaded_model.h5')
    return model

model = load_model()

# Function to prepare the uploaded image for prediction
def prepare_uploaded_image(uploaded_file):
    img = Image.open(uploaded_file)
    img = img.convert('L')  # Convert to grayscale
    img = img.resize((28, 28))  # Resize image to 28x28
    img_array = np.array(img) / 255.0  # Normalize the image
    img_array = np.expand_dims(img_array, axis=0)
    return img_array

# Main function to run Streamlit app
def main():
    st.title('Handwritten Digit Recognition')

    # Create a file uploader
    uploaded_file = st.file_uploader("Upload an image", type=['png', 'jpg', 'jpeg'])

    if uploaded_file is not None:
        image = prepare_uploaded_image(uploaded_file)
        predictions = model.predict(image)
        predicted_label = np.argmax(predictions)

        st.image(uploaded_file, caption='Uploaded Image', use_column_width=True)
        st.write(f'Predicted Digit: {predicted_label}')

# Run the app
if __name__ == '__main__':
    main()